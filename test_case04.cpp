#include "acutest.h"
#include "rasterization.h"
#include "Primitives.h"
#include "Clip2D.h"
#include "Color.h"

template<size_t N>
bool close_points(Vec<N> u, Vec<N> v){
    return norm(u - v) < 1e-5;
} 

void test_line_vec2(){
	std::vector<vec2> P = {
        {0, 0},
        {-1.26, -1.62},
        {-1.33, 1.49},
        {-1.06, 1.20},
        {-1.91, 1.55},
        {1.65, -0.06},
        {-0.36, 0.59},
        {-1.74, 0.58},
        {-1.22, -1.05},
        {0.68, 1.64},
        {-1.90, 1.52},
        {1.64, 0.77},
        {0.87, -0.69},
        {0.21, -1.25},
        {-1.38, 0.58},
        {0.88, 0.83},
        {1.26, -0.09},
        {-0.80, 1.75},
        {-0.22, -1.72},
        {0.64, -0.82},
        {-0.32, 0.99},
        {0.86, 0.42},
        {0.53, -1.24},
        {-1.68, -1.82},
        {0.13, 1.08},
        {-0.14, -0.21},
        {-0.21, -0.28},
        {1.53, 0.40},
        {-1.43, -1.30},
        {1.89, 1.87},
    };
    LineStrip L{P.size()};

    std::vector<Line<vec2>> expected = {
        Line<vec2>{vec2{0.0000000000, 0.0000000000},vec2{-0.7777777314, -1.0000000000}},
        Line<vec2>{vec2{-0.6938509941, 1.0000000000},vec2{0.9999998808, 0.2339607477}},
        Line<vec2>{vec2{1.0000000000, 0.1501989812},vec2{-0.3600000143, 0.5899999738}},
        Line<vec2>{vec2{-0.3600000143, 0.5899999738},vec2{-1.0000000000, 0.5853623152}},
        Line<vec2>{vec2{-1.0000000000, -0.7385262251},vec2{0.2279553413, 1.0000000000}},
        Line<vec2>{vec2{0.5544000864, 1.0000000000},vec2{1.0000001192, 0.9055931568}},
        Line<vec2>{vec2{1.0000000000, -0.4435065985},vec2{0.8700000048, -0.6900000572}},
        Line<vec2>{vec2{0.8700000048, -0.6899999976},vec2{0.5046428442, -1.0000000000}},
        Line<vec2>{vec2{-0.0072131306, -1.0000000000},vec2{-1.0000000000, 0.1426414251}},
        Line<vec2>{vec2{-1.0000000000, 0.6220353842},vec2{0.8799999952, 0.8299999833}},
        Line<vec2>{vec2{0.8799999952, 0.8299999833},vec2{1.0000000000, 0.5394736528}},
        Line<vec2>{vec2{1.0000000000, 0.1422330141},vec2{0.0396739244, 1.0000000000}},
        Line<vec2>{vec2{-0.6746397614, 1.0000000000},vec2{-0.3403458297, -1.0000000000}},
        Line<vec2>{vec2{0.4680000246, -1.0000000000},vec2{0.6399999857, -0.8199999928}},
        Line<vec2>{vec2{0.6399999857, -0.8199999928},vec2{-0.3199999928, 0.9899999499}},
        Line<vec2>{vec2{-0.3199999928, 0.9900000095},vec2{0.8600000739, 0.4199999571}},
        Line<vec2>{vec2{0.8600000143, 0.4199999869},vec2{0.5777108669, -1.0000000000}},
        Line<vec2>{vec2{-1.0000000000, -0.7304973602},vec2{0.0800690651, 1.0000001192}},
        Line<vec2>{vec2{0.1132557988, 1.0000000000},vec2{-0.1399999857, -0.2100000381}},
        Line<vec2>{vec2{-0.1400000006, -0.2099999934},vec2{-0.2099999934, -0.2800000012}},
        Line<vec2>{vec2{-0.2099999934, -0.2800000012},vec2{1.0000000000, 0.1928735971}},
        Line<vec2>{vec2{1.0000000000, 0.0956081450},vec2{-0.9076471329, -1.0000000000}},
        Line<vec2>{vec2{-1.0000000000, -0.8894276619},vec2{0.9788326025, 1.0000000000}},
        };
    
    auto clipped = clip(assemble(L, P));

    TEST_ASSERT(clipped.size() == expected.size());    

    for(unsigned int i = 0; i < expected.size(); i++){
        Line<vec2> line = clipped[i];
        Line<vec2> expected_line = expected[i];

        TEST_CHECK(close_points(line[0], expected_line[0]));
        TEST_CHECK(close_points(line[1], expected_line[1]));
    }
}


void test_line_vec2col(){
    struct Varying{
        vec2 position;
        vec3 color;
    };
    std::vector<Varying> P = {
        Varying{vec2{0.16, -0.71}, vec3{0.98, 0.21, 0.74}},
        Varying{vec2{-0.28, 1.37}, vec3{0.59, 0.40, 0.84}},
        Varying{vec2{-0.91, -1.92}, vec3{0.14, 0.03, 0.63}},
        Varying{vec2{0.71, -0.11}, vec3{0.69, 0.76, 0.51}},
        Varying{vec2{-0.46, 0.49}, vec3{0.88, 0.51, 0.29}},
        Varying{vec2{0.85, 1.14}, vec3{0.49, 0.11, 0.87}},
        Varying{vec2{0.21, -0.15}, vec3{0.70, 0.35, 0.23}},
        Varying{vec2{-0.03, 1.73}, vec3{0.11, 0.31, 0.58}},
        Varying{vec2{-0.68, -0.49}, vec3{0.87, 0.59, 0.31}},
        Varying{vec2{-0.49, 1.70}, vec3{0.83, 0.86, 0.14}},
        Varying{vec2{-0.53, 1.25}, vec3{0.83, 0.49, 0.61}},
        Varying{vec2{-0.67, -0.90}, vec3{0.84, 0.50, 0.54}},
        Varying{vec2{1.66, -1.10}, vec3{0.97, 0.95, 0.89}},
        Varying{vec2{-0.92, -0.10}, vec3{0.23, 0.70, 0.92}},
        Varying{vec2{-0.08, -1.37}, vec3{0.90, 0.81, 0.53}},
        Varying{vec2{-1.44, -1.49}, vec3{0.56, 0.73, 0.68}},
        Varying{vec2{0.30, -1.85}, vec3{0.01, 0.96, 0.67}},
        Varying{vec2{-0.60, 0.64}, vec3{0.37, 0.76, 0.51}},
        Varying{vec2{-1.20, 0.15}, vec3{0.65, 0.12, 0.54}},
        Varying{vec2{0.15, 1.46}, vec3{0.67, 0.28, 0.92}},
        Varying{vec2{-1.68, -1.07}, vec3{0.55, 0.16, 0.80}},
        Varying{vec2{1.61, -1.87}, vec3{0.81, 0.39, 0.38}},
        Varying{vec2{-0.10, -0.46}, vec3{0.20, 0.61, 0.41}},
        Varying{vec2{-1.37, 1.00}, vec3{0.02, 0.49, 0.37}},
        Varying{vec2{0.22, -0.75}, vec3{0.01, 0.92, 0.55}},
        Varying{vec2{-1.91, 0.11}, vec3{0.86, 0.54, 0.35}},
        Varying{vec2{1.55, 0.84}, vec3{0.72, 0.11, 0.27}},
        Varying{vec2{-0.03, 0.87}, vec3{0.11, 0.58, 0.27}},
        Varying{vec2{1.73, 1.05}, vec3{0.99, 0.13, 0.88}},
        Varying{vec2{-1.51, 0.49}, vec3{0.95, 0.32, 0.86}},
        Varying{vec2{-1.27, -1.37}, vec3{0.64, 0.88, 0.95}},
        Varying{vec2{1.58, -1.99}, vec3{0.63, 0.55, 0.74}},
        Varying{vec2{1.37, 0.51}, vec3{0.79, 0.52, 0.06}},
        Varying{vec2{-1.29, 0.80}, vec3{0.64, 0.86, 0.13}},
        Varying{vec2{-1.89, -1.86}, vec3{0.35, 0.74, 0.28}},
        Varying{vec2{0.75, 0.40}, vec3{0.74, 0.25, 0.55}},
        Varying{vec2{-0.67, -0.49}, vec3{0.91, 0.66, 0.32}},
        Varying{vec2{0.94, -1.97}, vec3{0.32, 0.31, 0.34}},
        Varying{vec2{-0.86, 1.48}, vec3{0.44, 0.80, 0.31}},
        Varying{vec2{-0.57, -0.36}, vec3{0.86, 0.95, 0.63}},
        Varying{vec2{-1.74, -0.48}, vec3{0.93, 0.38, 0.87}},
        Varying{vec2{-1.88, -0.52}, vec3{0.94, 0.86, 0.68}},
        Varying{vec2{1.07, 1.09}, vec3{0.68, 0.42, 0.89}},
        Varying{vec2{-0.94, -0.34}, vec3{1.00, 0.81, 0.91}},
        Varying{vec2{1.85, -0.32}, vec3{0.28, 0.36, 0.60}},
        Varying{vec2{-0.63, -1.39}, vec3{0.72, 0.81, 0.90}},
        Varying{vec2{0.17, -0.55}, vec3{1.00, 0.14, 0.39}},
        Varying{vec2{-0.75, 0.82}, vec3{0.33, 0.51, 0.74}},
        Varying{vec2{0.55, 1.33}, vec3{0.71, 0.07, 0.84}},
        Varying{vec2{1.33, 1.12}, vec3{0.88, 0.75, 0.77}},
        };
    
    LineStrip L{P.size()};
    std::vector<Line<Varying>> expected = {
        Line<Varying>{Varying{vec2{0.1599999964, -0.7099999785}, vec3{0.9800000191, 0.2099999934, 0.7400000095}, },Varying{vec2{-0.2017307878, 1.0000000000}, vec3{0.6593749523, 0.3662019372, 0.8222115040}, },},
        Line<Varying>{Varying{vec2{-0.3508510590, 1.0000000000}, vec3{0.5393920541, 0.3583890796, 0.8163829446}, },Varying{vec2{-0.7338297367, -0.9999998808}, vec3{0.2658358812, 0.1334650815, 0.6887233853}, },},
        Line<Varying>{Varying{vec2{-0.0865745544, -0.9999999404}, vec3{0.4195580482, 0.4010497332, 0.5690054893}, },Varying{vec2{0.7099999785, -0.1100000143}, vec3{0.6899999976, 0.7599999905, 0.5099999905}, },},
        Line<Varying>{Varying{vec2{0.7099999785, -0.1099999994}, vec3{0.6899999976, 0.7599999905, 0.5099999905}, },Varying{vec2{-0.4599999785, 0.4900000095}, vec3{0.8799999952, 0.5099999905, 0.2899999917}, },},
        Line<Varying>{Varying{vec2{-0.4600000083, 0.4900000095}, vec3{0.8799999952, 0.5099999905, 0.2899999917}, },Varying{vec2{0.5678461790, 1.0000000000}, vec3{0.5740000010, 0.1961538494, 0.7450769544}, },},
        Line<Varying>{Varying{vec2{0.7805426717, 1.0000000000}, vec3{0.5127906799, 0.1360465139, 0.8005426526}, },Varying{vec2{0.2099999785, -0.1499999762}, vec3{0.6999999881, 0.3499999940, 0.2300000191}, },},
        Line<Varying>{Varying{vec2{0.2099999934, -0.1500000060}, vec3{0.6999999881, 0.3499999940, 0.2300000042}, },Varying{vec2{0.0631914884, 1.0000000000}, vec3{0.3390957415, 0.3255318999, 0.4440957308}, },},
        Line<Varying>{Varying{vec2{-0.2437387556, 1.0000000000}, vec3{0.3599099219, 0.4020720720, 0.4912162125}, },Varying{vec2{-0.6800000072, -0.4900000095}, vec3{0.8700000048, 0.5899999738, 0.3100000024}, },},
        Line<Varying>{Varying{vec2{-0.6800000072, -0.4900000095}, vec3{0.8700000048, 0.5899999738, 0.3100000024}, },Varying{vec2{-0.5507305861, 1.0000000000}, vec3{0.8427853584, 0.7736986279, 0.1943379045}, },},
        Line<Varying>{Varying{vec2{-0.5462790728, 1.0000000000}, vec3{0.8311627507, 0.4911628067, 0.6018604636}, },Varying{vec2{-0.6700000167, -0.9000000954}, vec3{0.8399999738, 0.5000000000, 0.5400000215}, },},
        Line<Varying>{Varying{vec2{-0.6700000167, -0.8999999762}, vec3{0.8399999738, 0.5000000000, 0.5400000215}, },Varying{vec2{0.4949999452, -1.0000000000}, vec3{0.9049999714, 0.7250000238, 0.7150000334}, },},
        Line<Varying>{Varying{vec2{1.0000000000, -0.8441860676}, vec3{0.7806977034, 0.8860465288, 0.8976744413}, },Varying{vec2{-0.9199999571, -0.1000000238}, vec3{0.2300000191, 0.6999999881, 0.9200000167}, },},
        Line<Varying>{Varying{vec2{-0.9200000167, -0.1000000015}, vec3{0.2300000042, 0.6999999881, 0.9200000167}, },Varying{vec2{-0.3247243762, -1.0000000000}, vec3{0.7048031092, 0.7779527307, 0.6436220407}, },},
        Line<Varying>{Varying{vec2{-0.0072289109, -1.0000000000}, vec3{0.1328915656, 0.8917269111, 0.6153815389}, },Varying{vec2{-0.6000000238, 0.6399999857}, vec3{0.3700000048, 0.7599999905, 0.5099999905}, },},
        Line<Varying>{Varying{vec2{-0.6000000238, 0.6399999857}, vec3{0.3700000048, 0.7599999905, 0.5099999905}, },Varying{vec2{-1.0000000000, 0.3133333623}, vec3{0.5566666126, 0.3333333731, 0.5300000310}, },},
        Line<Varying>{Varying{vec2{-1.0000000000, 0.3440741301}, vec3{0.6529629230, 0.1437036991, 0.5962963104}, },Varying{vec2{-0.3240458369, 1.0000000000}, vec3{0.6629770994, 0.2238167822, 0.7865648866}, },},
        Line<Varying>{Varying{vec2{-0.1827272773, 1.0000000000}, vec3{0.6481818557, 0.2581818104, 0.8981818557}, },Varying{vec2{-1.0000000000, -0.1298907995}, vec3{0.5945901871, 0.2045901716, 0.8445901871}, },},
        Line<Varying>{Varying{vec2{0.5548934937, -0.9999999404}, vec3{0.4336169958, 0.5257446766, 0.3985106349}, },Varying{vec2{-0.1000000238, -0.4600000381}, vec3{0.1999999881, 0.6100000143, 0.4099999964}, },},
        Line<Varying>{Varying{vec2{-0.1000000015, -0.4600000083}, vec3{0.2000000030, 0.6100000143, 0.4099999964}, },Varying{vec2{-1.0000000000, 0.5746456385}, vec3{0.0724409372, 0.5249606371, 0.3816535473}, },},
        Line<Varying>{Varying{vec2{-1.0000000000, 0.5927672982}, vec3{0.0176729560, 0.5900629163, 0.4118868113}, },Varying{vec2{0.2200000286, -0.7500000000}, vec3{0.0099999998, 0.9200000167, 0.5500000119}, },},
        Line<Varying>{Varying{vec2{0.2199999988, -0.7500000000}, vec3{0.0099999998, 0.9200000167, 0.5500000119}, },Varying{vec2{-1.0000000000, -0.2574177980}, vec3{0.4968545139, 0.7023473978, 0.4354459941}, },},
        Line<Varying>{Varying{vec2{-1.0000000000, 0.3019942045}, vec3{0.8231791854, 0.4269075394, 0.3289595246}, },Varying{vec2{0.9999998808, 0.7239595056}, vec3{0.7422543764, 0.1783526242, 0.2827167809}, },},
        Line<Varying>{Varying{vec2{1.0000000000, 0.8504430056}, vec3{0.5076582432, 0.2736075819, 0.2700000107}, },Varying{vec2{-0.0299999714, 0.8700000048}, vec3{0.1100000143, 0.5799999833, 0.2700000107}, },},
        Line<Varying>{Varying{vec2{-0.0299999993, 0.8700000048}, vec3{0.1099999994, 0.5799999833, 0.2700000107}, },Varying{vec2{1.0000000000, 0.9753409028}, vec3{0.6250000000, 0.3166477382, 0.6269886494}, },},
        Line<Varying>{Varying{vec2{1.0000000000, 0.9238271117}, vec3{0.9809876680, 0.1728086323, 0.8754938245}, },Varying{vec2{-1.0000000000, 0.5781481266}, vec3{0.9562962651, 0.2900925875, 0.8631481528}, },},
        Line<Varying>{Varying{vec2{1.0000000000, 0.5503383279}, vec3{0.7691353559, 0.5672932267, 0.0697368383}, },Varying{vec2{-0.9999998808, 0.7683835030}, vec3{0.6563533545, 0.8229323626, 0.1223684102}, },},
        Line<Varying>{Varying{vec2{-0.8853982687, -1.0000000000}, vec3{0.4984070659, 0.5535398126, 0.3827433586}, },Varying{vec2{0.7499998808, 0.3999999762}, vec3{0.7400000095, 0.2500000000, 0.5500000119}, },},
        Line<Varying>{Varying{vec2{0.7500000000, 0.4000000060}, vec3{0.7400000095, 0.2500000000, 0.5500000119}, },Varying{vec2{-0.6700000763, -0.4899999797}, vec3{0.9100000262, 0.6600000262, 0.3199999928}, },},
        Line<Varying>{Varying{vec2{-0.6700000167, -0.4900000095}, vec3{0.9100000262, 0.6600000262, 0.3199999928}, },Varying{vec2{-0.1152027249, -1.0000000000}, vec3{0.7066892385, 0.5393918753, 0.3268918991}, },},
        Line<Varying>{Varying{vec2{0.4339130521, -1.0000000000}, vec3{0.3537391424, 0.4477681220, 0.3315652311}, },Varying{vec2{-0.6095651984, 1.0000000000}, vec3{0.4233043492, 0.7318260670, 0.3141739070}, },},
        Line<Varying>{Varying{vec2{-0.7843478322, 1.0000000000}, vec3{0.5495651960, 0.8391304612, 0.3934782743}, },Varying{vec2{-0.5699999928, -0.3600000143}, vec3{0.8600000143, 0.9499999881, 0.6299999952}, },},
        Line<Varying>{Varying{vec2{-0.5699999928, -0.3600000143}, vec3{0.8600000143, 0.9499999881, 0.6299999952}, },Varying{vec2{-1.0000000000, -0.4041025639}, vec3{0.8857265115, 0.7405128479, 0.7182050943}, },},
        Line<Varying>{Varying{vec2{-1.0000000000, -0.0397288203}, vec3{0.8624407053, 0.7287457585, 0.7426440716}, },Varying{vec2{0.9050930738, 1.0000000000}, vec3{0.6945341825, 0.4445962608, 0.8782608509}, },},
        Line<Varying>{Varying{vec2{0.9434965253, 1.0000000000}, vec3{0.7001398802, 0.4445454478, 0.8912587166}, },Varying{vec2{-0.9399999380, -0.3400000334}, vec3{1.0000000000, 0.8100000024, 0.9100000262}, },},
        Line<Varying>{Varying{vec2{-0.9399999976, -0.3400000036}, vec3{1.0000000000, 0.8100000024, 0.9100000262}, },Varying{vec2{1.0000000000, -0.3260931969}, vec3{0.4993548393, 0.4970967770, 0.6944444776}, },},
        Line<Varying>{Varying{vec2{1.0000000000, -0.6867338419}, vec3{0.4308064580, 0.5142338872, 0.7028225660}, },Varying{vec2{0.2739250660, -1.0000000000}, vec3{0.5596262217, 0.6459813118, 0.7906541824}, },},
        Line<Varying>{Varying{vec2{-0.2585714161, -1.0000000000}, vec3{0.8500000238, 0.4989285767, 0.6632142663}, },Varying{vec2{0.1700000167, -0.5500000119}, vec3{1.0000000000, 0.1399999857, 0.3899999857}, },},
        Line<Varying>{Varying{vec2{0.1700000018, -0.5500000119}, vec3{1.0000000000, 0.1400000006, 0.3899999857}, },Varying{vec2{-0.7500000000, 0.8199999928}, vec3{0.3300000429, 0.5099999905, 0.7400000095}, },},
        Line<Varying>{Varying{vec2{-0.7500000000, 0.8199999928}, vec3{0.3300000131, 0.5099999905, 0.7400000095}, },Varying{vec2{-0.2911765277, 1.0000000000}, vec3{0.4641176462, 0.3547058702, 0.7752941251}, },},
        };
    
    auto clipped = clip(assemble(L, P));

    TEST_ASSERT(clipped.size() == expected.size());    

    for(unsigned int i = 0; i < expected.size(); i++){
        Line<Varying> line = clipped[i];
        Line<Varying> expected_line = expected[i];

        TEST_CHECK(close_points(line[0].position, expected_line[0].position));
        TEST_CHECK(close_points(line[1].position, expected_line[1].position));
        TEST_CHECK(close_points(line[0].color, expected_line[0].color));
        TEST_CHECK(close_points(line[1].color, expected_line[1].color));
    }
}

#include <random>
void test_line_varying(){
    struct Varying{
        vec2 position;
        float value;
        vec2 texCoords;
        vec3 color;
    };

    std::vector<Varying> P = {
        Varying{vec2{1.01, -0.12}, 1.75, vec2{0.78, 0.35}, vec3{0.99, -0.79, 1.29}, },
        Varying{vec2{0.63, 1.17}, 1.76, vec2{1.44, -0.50}, vec3{0.14, -1.57, 0.02}, },
        Varying{vec2{0.99, 0.91}, -1.88, vec2{0.99, -0.14}, vec3{-1.23, -1.56, 0.27}, },
        Varying{vec2{-0.07, 1.34}, -0.36, vec2{0.41, 0.58}, vec3{-0.04, 1.62, -0.58}, },
        Varying{vec2{1.42, -0.01}, -1.05, vec2{1.13, 0.59}, vec3{-0.97, 1.02, 1.04}, },
        Varying{vec2{-0.70, -1.16}, 1.78, vec2{0.16, -0.20}, vec3{1.49, -1.29, 0.26}, },
        Varying{vec2{-0.32, -1.08}, 0.62, vec2{1.46, 1.54}, vec3{0.81, -1.19, 0.60}, },
        Varying{vec2{-0.63, 0.11}, 0.57, vec2{0.98, -1.76}, vec3{-1.06, -1.50, -0.37}, },
        Varying{vec2{-0.08, 1.41}, 0.99, vec2{0.58, 1.63}, vec3{0.82, -0.17, -1.39}, },
        Varying{vec2{-0.33, 0.30}, -1.75, vec2{-0.52, 1.70}, vec3{-0.31, -0.50, -1.93}, },
        Varying{vec2{-0.40, 1.29}, 1.32, vec2{-0.00, -1.60}, vec3{1.16, 1.67, 1.88}, },
        Varying{vec2{-1.19, -0.10}, -1.54, vec2{0.63, 0.69}, vec3{-1.32, -1.40, -1.57}, },
        Varying{vec2{0.38, -1.42}, -0.91, vec2{-0.99, 1.73}, vec3{1.19, 0.25, 1.45}, },
        Varying{vec2{-1.03, 0.07}, -1.74, vec2{1.96, 0.67}, vec3{-0.93, -1.64, 0.82}, },
        Varying{vec2{0.67, -1.69}, 1.00, vec2{1.67, 0.95}, vec3{-0.70, 1.78, 0.48}, },
        Varying{vec2{-0.69, -1.71}, 0.86, vec2{-1.06, 0.14}, vec3{1.67, 0.45, 1.83}, },
        Varying{vec2{-0.26, 1.51}, -0.70, vec2{1.59, 0.48}, vec3{-0.09, -1.45, -0.22}, },
        Varying{vec2{1.75, 0.43}, -1.88, vec2{0.83, -1.90}, vec3{0.31, -0.51, -1.43}, },
        Varying{vec2{0.47, 0.87}, -0.12, vec2{0.42, -1.81}, vec3{-0.15, 1.50, -1.88}, },
        Varying{vec2{-0.28, -1.96}, 1.20, vec2{0.09, -1.85}, vec3{0.27, 1.67, -1.62}, },
        Varying{vec2{-0.22, 0.46}, 0.25, vec2{0.07, 1.57}, vec3{1.19, -0.27, 0.64}, },
        Varying{vec2{0.76, -0.95}, -1.89, vec2{0.78, 0.15}, vec3{1.93, -1.78, -0.78}, },
        Varying{vec2{-0.97, 1.77}, 0.58, vec2{1.46, 1.10}, vec3{1.96, 1.80, -0.47}, },
        Varying{vec2{-0.71, 0.94}, -1.48, vec2{-1.26, 1.01}, vec3{-1.90, -0.60, -1.37}, },
        Varying{vec2{-1.78, 1.97}, 0.97, vec2{1.85, 1.12}, vec3{0.37, -1.47, 1.84}, },
        Varying{vec2{0.67, -0.77}, -1.63, vec2{0.65, 0.19}, vec3{-0.25, -1.28, -0.48}, },
        Varying{vec2{-0.94, -1.71}, 1.17, vec2{-0.38, -1.61}, vec3{-1.71, 0.22, 0.70}, },
        Varying{vec2{-1.84, -1.29}, -1.81, vec2{0.16, -1.30}, vec3{-1.39, 0.31, 1.92}, },
        Varying{vec2{1.11, 0.60}, 0.67, vec2{-1.57, 1.10}, vec3{-1.24, 1.23, -1.14}, },
        Varying{vec2{1.43, 0.45}, -1.52, vec2{-1.63, -0.42}, vec3{-1.49, 0.34, -1.23}, },
        };
    std::vector<Line<Varying>> expected = {
        Line<Varying>{Varying{vec2{1.0000000000, -0.0860526562}, 1.7502632141, vec2{0.7973684072, 0.3276315928}, vec3{0.9676315784, -0.8105263114, 1.2565789223}, }, Varying{vec2{0.6800774932, 1.0000000000}, 1.7586821318, vec2{1.3530232906, -0.3879845440}, vec3{0.2520154715, -1.4672093391, 0.1873642206}, }, },
        Line<Varying>{Varying{vec2{0.8653846383, 1.0000000000}, -0.6199998856, vec2{1.1457692385, -0.2646153569}, vec3{-0.7557692528, -1.5634615421, 0.1834615320}, }, Varying{vec2{0.9900000095, 0.9100000262}, -1.8799998760, vec2{0.9900000095, -0.1399999857}, vec3{-1.2300000191, -1.5599999428, 0.2700000107}, }, },
        Line<Varying>{Varying{vec2{0.9900000095, 0.9100000262}, -1.8799999952, vec2{0.9900000095, -0.1400000006}, vec3{-1.2300000191, -1.5599999428, 0.2700000107}, }, Varying{vec2{0.7681396008, 1.0000000000}, -1.5618605614, vec2{0.8686046600, 0.0106976181}, vec3{-0.9809303284, -0.8944187760, 0.0920930803}, }, },
        Line<Varying>{Varying{vec2{0.3052593172, 1.0000000000}, -0.5337778330, vec2{0.5913333893, 0.5825185180}, vec3{-0.2742222548, 1.4688888788, -0.1719999611}, }, Varying{vec2{1.0000000000, 0.3705369234}, -0.8555033207, vec2{0.9270470142, 0.5871812105}, vec3{-0.7078523636, 1.1891274452, 0.5833556056}, }, },
        Line<Varying>{Varying{vec2{1.0000000000, -0.2378301769}, -0.4893395901, vec2{0.9378302097, 0.4334905446}, vec3{-0.4826415479, 0.5623584986, 0.8854717016}, }, Varying{vec2{-0.4050434828, -1.0000000000}, 1.3862609863, vec2{0.2949564457, -0.0900869370}, vec3{1.1477391720, -0.9686087370, 0.3685216904}, }, },
        Line<Varying>{Varying{vec2{-0.3408403397, -1.0000000000}, 0.6166386604, vec2{1.4277311563, 1.3181511164}, vec3{0.6842856407, -1.2108403444, 0.5347899199}, }, Varying{vec2{-0.6299999952, 0.1100000143}, 0.5699999928, vec2{0.9800000191, -1.7599999905}, vec3{-1.0599999428, -1.5000000000, -0.3700000048}, }, },
        Line<Varying>{Varying{vec2{-0.6299999952, 0.1099999994}, 0.5699999928, vec2{0.9800000191, -1.7599999905}, vec3{-1.0599999428, -1.5000000000, -0.3700000048}, }, Varying{vec2{-0.2534615397, 0.9999999404}, 0.8575384617, vec2{0.7061538696, 0.5608460903}, vec3{0.2270768881, -0.5894615054, -1.0683076382}, }, },
        Line<Varying>{Varying{vec2{-0.1723423451, 1.0000000000}, -0.0220720768, vec2{0.1736936867, 1.6558558941}, vec3{0.4026125968, -0.2918919027, -1.5894594193}, }, Varying{vec2{-0.3299999833, 0.3000000715}, -1.7500000000, vec2{-0.5199999213, 1.7000000477}, vec3{-0.3100000024, -0.5000000000, -1.9299999475}, }, },
        Line<Varying>{Varying{vec2{-0.3300000131, 0.3000000119}, -1.7500000000, vec2{-0.5199999809, 1.7000000477}, vec3{-0.3100000024, -0.5000000000, -1.9299999475}, }, Varying{vec2{-0.3794949651, 1.0000000000}, 0.4207072258, vec2{-0.1523232162, -0.6333334446}, vec3{0.7293938994, 1.0343434811, 0.7639394999}, }, },
        Line<Varying>{Varying{vec2{-0.5648201704, 1.0000000000}, 0.7233094573, vec2{0.1314388365, -1.1222302914}, vec3{0.6425899863, 1.0294964314, 1.1602158546}, }, Varying{vec2{-1.0000000000, 0.2343038321}, -0.8521519899, vec2{0.4784809947, 0.1392403841}, vec3{-0.7235442400, -0.6616455317, -0.7402530909}, }, },
        Line<Varying>{Varying{vec2{-1.0000000000, -0.2597452700}, -1.4637578726, vec2{0.4339489937, 0.8158599138}, vec3{-1.0162420273, -1.2003183365, -1.2045222521}, }, Varying{vec2{-0.1195454597, -1.0000000000}, -1.1104545593, vec2{-0.4745454788, 1.3990908861}, vec3{0.3913637400, -0.2749999762, 0.4890908003}, }, },
        Line<Varying>{Varying{vec2{-0.0174496174, -1.0000000000}, -1.1439597607, vec2{-0.1584565043, 1.4312081337}, vec3{0.5924162269, -0.2827516198, 1.2724161148}, }, Varying{vec2{-1.0000000000, 0.0382978916}, -1.7223404646, vec2{1.8972342014, 0.6925532818}, vec3{-0.8848936558, -1.5997872353, 0.8334042430}, }, },
        Line<Varying>{Varying{vec2{-1.0000000000, 0.0389412045}, -1.6916471720, vec2{1.9548823833, 0.6749411821}, vec3{-0.9259411693, -1.5796470642, 0.8140000105}, }, Varying{vec2{0.0035227537, -1.0000000000}, -0.0742045641, vec2{1.7836931944, 0.8402272463}, vec3{-0.7901704311, 0.4392045736, 0.6132954359}, }, },
        Line<Varying>{Varying{vec2{-0.5951863527, -1.0000000000}, 0.5160248280, vec2{-0.4756830931, 0.2149689496}, vec3{1.2819254398, 0.0310558379, 1.3779814243}, }, Varying{vec2{-0.3281055689, 1.0000000000}, -0.4529191256, vec2{1.1702797413, 0.4261490703}, vec3{0.1887577772, -1.1490683556, 0.1046894789}, }, },
        Line<Varying>{Varying{vec2{0.6891667247, 1.0000000000}, -1.2572221756, vec2{1.2311110497, -0.6438888311}, vec3{0.0988888890, -1.0061111450, -0.7913888693}, }, Varying{vec2{1.0000000000, 0.8329851031}, -1.4397015572, vec2{1.1135821342, -1.0119402409}, vec3{0.1607462764, -0.8607462645, -0.9785073996}, }, },
        Line<Varying>{Varying{vec2{1.0000000000, 0.6878125072}, -0.8487499952, vec2{0.5897656083, -1.8472656012}, vec3{0.0404687524, 0.6677343845, -1.6936718225}, }, Varying{vec2{0.4700000286, 0.8700000048}, -0.1200000048, vec2{0.4199999869, -1.8099999428}, vec3{-0.1500000060, 1.5000000000, -1.8799999952}, }, },
        Line<Varying>{Varying{vec2{0.4699999988, 0.8700000048}, -0.1199999973, vec2{0.4199999869, -1.8099999428}, vec3{-0.1500000060, 1.5000000000, -1.8799999952}, }, Varying{vec2{-0.0255830586, -1.0000000000}, 0.7522261739, vec2{0.2019434571, -1.8364311457}, vec3{0.1275265217, 1.6123321056, -1.7081978321}, }, },
        Line<Varying>{Varying{vec2{-0.2561983466, -1.0000000000}, 0.8231405020, vec2{0.0820661187, -0.4933058023}, vec3{0.6349587440, 0.9004132152, -0.7234711051}, }, Varying{vec2{-0.2199999988, 0.4600000381}, 0.2500000000, vec2{0.0700000003, 1.5700000525}, vec3{1.1900000572, -0.2699999809, 0.6399999857}, }, },
        Line<Varying>{Varying{vec2{-0.2199999988, 0.4600000083}, 0.2500000000, vec2{0.0700000003, 1.5700000525}, vec3{1.1900000572, -0.2700000107, 0.6399999857}, }, Varying{vec2{0.7599999905, -0.9499999285}, -1.8899998665, vec2{0.7799999714, 0.1499999762}, vec3{1.9299999475, -1.7799999714, -0.7799999714}, }, },
        Line<Varying>{Varying{vec2{0.7599999905, -0.9499999881}, -1.8899999857, vec2{0.7799999714, 0.1500000060}, vec3{1.9299999475, -1.7799999714, -0.7799999714}, }, Varying{vec2{-0.4802573919, 1.0000000000}, -0.1192278862, vec2{1.2675000429, 0.8310662508}, vec3{1.9515073299, 0.7865440845, -0.5577573180}, }, },
        Line<Varying>{Varying{vec2{-0.7287951708, 1.0000000000}, -1.3310842514, vec2{-1.0633735657, 1.0165059566}, vec3{-1.6209638119, -0.4265060425, -1.3049397469}, }, Varying{vec2{-0.7099999785, 0.9399999976}, -1.4800000191, vec2{-1.2599999905, 1.0099999905}, vec3{-1.9000000954, -0.6000001431, -1.3700000048}, }, },
        Line<Varying>{Varying{vec2{-0.7099999785, 0.9399999976}, -1.4800000191, vec2{-1.2599999905, 1.0099999905}, vec3{-1.8999999762, -0.6000000238, -1.3700000048}, }, Varying{vec2{-0.7723300457, 1.0000000000}, -1.3372815847, vec2{-1.0788348913, 1.0164077282}, vec3{-1.7677669525, -0.6506796479, -1.1830097437}, }, },
        Line<Varying>{Varying{vec2{-0.9126641750, 1.0000000000}, 0.0495620966, vec2{1.4251824617, 0.7907664180}, vec3{0.1505109519, -1.4027372599, 1.0186861753}, }, Varying{vec2{0.6700000763, -0.7699999809}, -1.6299998760, vec2{0.6499999762, 0.1899999976}, vec3{-0.2500000000, -1.2799999714, -0.4799998999}, }, },
        Line<Varying>{Varying{vec2{0.6700000167, -0.7699999809}, -1.6299999952, vec2{0.6499999762, 0.1899999976}, vec3{-0.2500000000, -1.2799999714, -0.4799999893}, }, Varying{vec2{0.2760638297, -1.0000000000}, -0.9448935986, vec2{0.3979786932, -0.2504255176}, vec3{-0.6072340608, -0.9129787087, -0.1912766099}, }, },
        Line<Varying>{Varying{vec2{-0.9999999404, -0.7518304586}, -1.1038303375, vec2{-0.3326102197, -0.6166100502}, vec3{-1.3472881317, 0.5719661713, 1.0486779213}, }, Varying{vec2{1.0000001192, 0.5295255184}, 0.5775256157, vec2{-1.5054917336, 1.0105087757}, vec3{-1.2455931902, 1.1956949234, -1.0258985758}, }, },
    };

    LineStrip L{P.size()};
    auto clipped = clip(assemble(L, P));

    TEST_ASSERT(clipped.size() == expected.size());    

    for(unsigned int i = 0; i < expected.size(); i++){
        Line<Varying> line = clipped[i];
        Line<Varying> expected_line = expected[i];

        TEST_CHECK(close_points(asVec(line[0]), asVec(expected_line[0])));
        TEST_CHECK(close_points(asVec(line[1]), asVec(expected_line[1])));
    }
}

TEST_LIST = {
    {"clip Line<vec2>", test_line_vec2},
    {"clip Line<vec2col>", test_line_vec2col},
    {"clip Line<Varying>", test_line_varying},
    {NULL, NULL}
};